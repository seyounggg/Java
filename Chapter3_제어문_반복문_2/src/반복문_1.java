/*
 * 	반복문 : 유사한 내용이 여러번 반복할때 주로 사용
 * 			- 영화목록, 맛집목록, 메인화면, 상세보기(if), 페이징 ...
 * 
 * 	종류 : 
 * 
 *
 * 			반복 횟수가 정해져 있는 경우 : for
 * 			반복 횟수가 정해지지 않은 경우 : while
 *			한번 이상 수행이 가능 : do~while
 *			-------------------------------
 *			자바 : 출력,제어 => for(2차, 중첩)
 *				  데이터베이스, 네트워크 => while(1차)
 *	형식 : 
 *			● for                       __ 조건식이 true면 반복문장수행 -> 증감 / 조건식이 false면 종료
 *				for(초기값;조건식;증감식)
 *				{
 *					반복 수행 문장
 *				}
 *
 *			● while
 *				초기값         -> 1
 *				while(조건문)  -> 2 =>  수행을 못할 수도 있다
 *				{
 *					반복 수행 문장 -> 3
 *					증감식       -> 4  => 2번 이동(true 수행, false 종료)
 *				}
 *
 *			● do~while
 *				초기값           - 1
 *				do{
 *					반복 수행 문장 - 2 
 *					증감식       - 3
 *				}while(조건문);  - 4
 *
 *
 *
 *				
 *
 *			● for => 2차
 */
public class 반복문_1 {

	public static void main(String[] args) {

		/*String[] food= {
				"버섯으로 관자 느낌 내는 방법! 새송이버섯간장버터구이 만들기",
				"아삭아삭한 고추된장박이",
				"달콤 짭조름♡ 떡 베이컨 간장조림♡",
				"새송이버섯버터굴소스볶음 간단반찬",
				"[마늘종볶음]단짠단짠 자꾸만 손이가요~",
				
		};
		String[] chef= {
				"루던	",
				"돌하우스",
				"요블리",
				"라피네",
				"요블리",
				
		};
		for(int i=0;i<5;i++)
		{
			System.out.println(food[i]+"("+chef[i]+")");
		}*/
		
		/*
		 * for(①초기값;②조건식;④증감식)
		 * {
		 * 		③반복수행문장
		 * } 1>2>3>4> 2>3>4> 2>3>4> _ false 면 종료
		 */
		//int i를 계속 사용하고 싶으면 for 밖에서 변수를 먼저 선언해야함 => 전역변수
		//int i=10; // i변수 선언
				//i=100; //위에 선언한 i 변수 재사용
		for(int i=1;i<=10;i++) // int t는 for {} 안에서만 사용 가능 => 지역변수(블록변수)는 스택(메모리에 의해 자동 삭제)
		{
			System.out.print(i+" ");
		}
		
		System.out.println("\n==============================");
		//A~Z출력 ~> 문제 : A를 26개 출력
		/*●for
		 * for(char c='A';c<='Z';c++)
		{
			System.out.print(c+" ");
		}*/
		
		char c='A'; //메모리가 하나니까 증가값 저장 후 출력이 반복됨 -> 그래서 A B C ...로 출력
		for(int i=0;i<26;i++)
		{
			// char c='A'; // 26개의 메모리 생성 / 한번 출력되고 블럭 벗어나니까 삭제 -> 그래서 계속 A 출력
			System.out.print(c++ + " ");
		}
		System.out.println("\n==============================");
		System.out.println("===========while==============");
		/*
		 * ● while
		 * 	① 초기값
		 *	 while(② 조건문) ②가 false면 종료
		 *	 {
		 * 		③ 반복 수행 문장
		 * 		④ 증감식 
		 *	 }
		 * 무한루프(네트워크 서버, 데이터베이스 값 읽기, 파일 읽기)
		 * 파일 읽기 => -1(EOF)
		 */
		// 1~10까지 출력
		int i=1; // 초기값(시작점)
		while(i<=10) // 조건식(종료점) -> i가 10이 되면 종료
		{
			System.out.print(i+" ");
			i++; // 종료시까지 제어점 (1~10까지) => 증가
		}
		System.out.println("\n===================");
		c='A'; // 출력용
		i=0;
		while(i<26)
		{
			System.out.print(c++ + " ");
			i++;
		}
		System.out.println("\n==================");
		System.out.println("===========do~while==============");
		/*
		 * ● do~while : 후조건 => 무조건 1번은 수행한다
		 * 	① 초기값
		 * 	do
		 * 	{
		 * 		② 반복 실행 문장
		 * 		③ 증가식
		 * 	}while(④ 조건식); -> true면 ②로 / false면 종료
		 * 
		 * 예)
		 * 	int i=1;
		 * 	do
		 * 	{
		 * 		system.our.print(i+" ");
		 * 			-> i=1 i=2 i=3...i=10
		 * 		i++;
		 * 			-> i=2 i=3 i=4...i=11 <- false! 종료
		 * 	}while(i<=10);
		 */
		i=1;
		do
		{
			System.out.print(i+" ");
			i++;
		}while(i<=10);
		System.out.println("\n========================");
		c='A';
		i=0;
		do {
			System.out.print(c++ + " ");
			i++;
		}while(i<26);
	}

}